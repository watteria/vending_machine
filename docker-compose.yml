services:
  ddd-skeleton-backend:
    container_name: ddd-skeleton-backend
    build:
      context: docker/nginx_backend
      args:
        UID: ${U_ID:-1000}
    ports:
      - "1000:80"
      - "1001:443"
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - ddd-skeleton-be
    networks:
      - ddd-skeleton-network

  ddd-skeleton-be:
    container_name: ddd-skeleton-be
    build:
      context: docker/php
      args:
        UID: ${U_ID:-1000}
    environment:
      PHP_IDE_CONFIG: serverName=Docker
      PHP_XDEBUG_ENABLED: 1
      XDEBUG_CONFIG: remote_host=172.17.0.1 remote_port=9005 # Linux users
    volumes:
      - ./:/appdata/www
      - ./docker/php/xdebug-linux.ini:/usr/local/etc/php/conf.d/xdebug.ini # Linux users
      - ~/.ssh/id_rsa:/home/appuser/.ssh/id_rsa
    depends_on:
      - ddd-skeleton-db
    networks:
      - ddd-skeleton-network

  ddd-skeleton-db:
    container_name: ddd-skeleton-db
    image: mysql:8.0
    ports:
      - "3350:3306"
    environment:
      MYSQL_DATABASE: database
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    command: mysqld --sql_mode="STRICT_ALL_TABLES,NO_ENGINE_SUBSTITUTION"
    volumes:
      - ddd-skeleton-db-data:/var/lib/mysql
    networks:
      - ddd-skeleton-network

  ddd-skeleton-rabbitmq:
    container_name: ddd-skeleton-rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      - ./docker/nginx/certs:/etc/ssl/certs  # AÃ±adir certificados SSL al contenedor
    networks:
      - ddd-skeleton-network


###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  ddd-skeleton-db-data:

networks:
  ddd-skeleton-network:
