services:
  ddd-skeleton-frontend:
    container_name: ddd-skeleton-frontend
    build:
      context: frontend
      args:
        UID: ${U_ID:-1002}
    ports:
      - "1002:3000"
    volumes:
      - ./frontend/vending_machine/:/home/apps/vending_machine/
    depends_on:
      - ddd-skeleton-mongodb
      - ddd-skeleton-be
    networks:
      - ddd-skeleton-network

  ddd-skeleton-backend:
    container_name: ddd-skeleton-backend
    build:
      context: docker/nginx_backend
      args:
        UID: ${U_ID:-1002}
    ports:
      - "1000:80"
      - "1001:443"
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - ddd-skeleton-mongodb
      - ddd-skeleton-be
    networks:
      - ddd-skeleton-network

  ddd-skeleton-be:
    container_name: ddd-skeleton-be
    build:
      context: docker/php
      args:
        UID: ${U_ID:-1002}
    environment:
      PHP_IDE_CONFIG: serverName=Docker
      PHP_XDEBUG_ENABLED: 1
      XDEBUG_CONFIG: remote_host=172.17.0.1 remote_port=9005
    volumes:
      - ./:/appdata/www
      - ./docker/php/xdebug-linux.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ~/.ssh/id_rsa:/home/appuser/.ssh/id_rsa

    networks:
      - ddd-skeleton-network

  ddd-skeleton-rabbitmq:
    container_name: ddd-skeleton-rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      - ./docker/nginx/certs:/etc/ssl/certs
    networks:
      - ddd-skeleton-network

  ddd-skeleton-supervisor:
    container_name: ddd-skeleton-supervisor
    build:
      context: docker/php
      args:
        UID: ${U_ID:-1002}
    user: root
    command: supervisord
    volumes:
      - ./:/appdata/www
      - ./docker/supervisor/workers.conf:/etc/supervisor/conf.d/workers.conf
    depends_on:
      - ddd-skeleton-mongodb
      - ddd-skeleton-rabbitmq
    networks:
      - ddd-skeleton-network

  ddd-skeleton-mongodb:
    container_name: ddd-skeleton-mongodb
    build:
      context: ./docker/mongodb
      args:
        UID: ${U_ID:-1002}
        GID: ${G_ID:-1002}
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: database
    volumes:
      - ./docker/mongodb/mongodata:/data/db
      - ./docker/mongodb/mongo_seeds:/mongo-seed
      - ./docker/mongodb/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    depends_on:
      - ddd-skeleton-be
    networks:
      - ddd-skeleton-network

volumes:
  ddd-skeleton-mongodb-data:

networks:
  ddd-skeleton-network:
